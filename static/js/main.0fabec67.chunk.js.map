{"version":3,"sources":["components/Task.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Task","props","useState","showDetails","setShowDetails","className","style","borderRightColor","task","color","onClick","name","onComplete","desc","Date","date","toUTCString","substr","App","setName","setDesc","toISOString","setDate","setColor","taskList","setTaskList","showInputs","setShowInputs","handleInputChange","event","target","value","Error","completeTask","nameToDelete","filter","id","map","key","type","placeholder","onChange","length","nextTask","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fabec67.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { TaskData } from \"../types\";\nimport \"../styles/Task.css\";\n\ntype TaskProps = {\n  task: TaskData;\n  onComplete(nameToDelete: string): void;\n};\n\nfunction Task(props: TaskProps) {\n  const [showDetails, setShowDetails] = useState<boolean>(true);\n\n  const toggleDetails = () => {\n    setShowDetails(!showDetails);\n  };\n\n  return (\n    <div className=\"Task\" style={{ borderRightColor: props.task.color }}>\n      <h2 className=\"task-header\" onClick={toggleDetails}>\n        {props.task.name}\n      </h2>\n      <button className=\"delete\" onClick={() => props.onComplete(props.task.name)}>\n        &#x2715;\n      </button>\n      {showDetails ? (\n        <div className=\"details\">\n          <div>{props.task.desc}</div>\n          <br />\n          <div>{new Date(props.task.date).toUTCString().substr(0, 16)}</div>\n          <div>{props.task.color}</div>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default Task;\n","import React, { ChangeEvent, useState } from \"react\";\nimport \"../styles/App.css\";\nimport Task from \"./Task\";\nimport { TaskData } from \"../types\";\n\nfunction App() {\n  const [name, setName] = useState<string>(\"\");\n  const [desc, setDesc] = useState<string>(\"\");\n  const [date, setDate] = useState<string>(new Date().toISOString().substr(0, 10));\n  const [color, setColor] = useState<string>(\"#ff8080\");\n  const [taskList, setTaskList] = useState<TaskData[]>([]);\n  const [showInputs, setShowInputs] = useState<boolean>(true);\n\n  const handleInputChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    switch (event.target.name) {\n      case \"name\":\n        setName(event.target.value);\n        break;\n      case \"date\":\n        setDate(event.target.value);\n        break;\n      case \"color\":\n        setColor(event.target.value);\n        break;\n      default:\n        throw new Error(`Unexpected input change: ${event.target.name}`);\n    }\n  };\n\n  const handleTextAreaChange = (event: ChangeEvent<HTMLTextAreaElement>): void => {\n    switch (event.target.name) {\n      case \"desc\":\n        setDesc(event.target.value);\n        break;\n      default:\n        throw new Error(`Unexpected textarea change: ${event.target.name}`);\n    }\n  };\n\n  const addTask = (): void => {\n    // Task name is mandatory, other fields optional\n    if (name === \"\") return;\n\n    // Do not create tasks with duplicate names\n    let getMatches = taskList.filter((task) => task.name === name);\n    if (getMatches.length !== 0) {\n      setName(\"\");\n      return;\n    }\n\n    const nextTask: TaskData = {\n      name: name,\n      desc: desc,\n      date: date,\n      color: color,\n    };\n\n    // Adding nextTask to the existing task list\n    console.log(nextTask);\n    setTaskList([...taskList, nextTask]);\n\n    // Resetting input fields\n    setName(\"\");\n    setDesc(\"\");\n  };\n\n  const completeTask = (nameToDelete: string): void => {\n    setTaskList(taskList.filter((task) => task.name !== nameToDelete));\n  };\n\n  const toggleInputs = () => {\n    setShowInputs(!showInputs);\n  };\n\n  return (\n    <div className=\"App\">\n      <div id=\"task-list\">\n        {taskList.map((task: TaskData, key: number) => {\n          return <Task key={key} task={task} onComplete={completeTask} />;\n        })}\n      </div>\n      <div id=\"next-item\">\n        <h1 id=\"header\" onClick={toggleInputs}>\n          Add Task &#9662;\n        </h1>\n        {showInputs ? (\n          <div id=\"inputs\">\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              placeholder=\"Task Name\"\n              onChange={handleInputChange}\n            />\n            <input\n              type=\"date\"\n              name=\"date\"\n              value={date}\n              placeholder=\"Due Date\"\n              onChange={handleInputChange}\n            />\n            <textarea\n              name=\"desc\"\n              value={desc}\n              placeholder=\"Description\"\n              onChange={handleTextAreaChange}\n            />\n            <div className=\"split-row\">\n              <input\n                type=\"color\"\n                name=\"color\"\n                value={color}\n                placeholder=\"Task Color\"\n                onChange={handleInputChange}\n              />\n              <button onClick={addTask}>Add Item</button>\n            </div>\n          </div>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(/*console.log*/);\n"],"sourceRoot":""}